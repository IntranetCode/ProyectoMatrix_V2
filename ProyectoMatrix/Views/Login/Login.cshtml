@model ProyectoMatrix.Models.UsuarioModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Acceso al Sistema | NSGroup</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
    <link href="~/css/login.css" rel="stylesheet" />
    <style>
        /* Estilos adicionales para el modal */
        .modal-empresa {
            backdrop-filter: blur(8px);
            background: rgba(0, 0, 0, 0.6);
        }

            .modal-empresa .modal-content {
                border: none;
                border-radius: 20px;
                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }

            .modal-empresa .modal-header {
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                padding: 2rem 2rem 1rem;
            }

            .modal-empresa .modal-title {
                font-weight: 600;
                font-size: 1.5rem;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

            .modal-empresa .btn-close {
                filter: invert(1);
                opacity: 0.7;
            }

                .modal-empresa .btn-close:hover {
                    opacity: 1;
                }

            .modal-empresa .modal-body {
                padding: 1rem 2rem 2rem;
            }

        .empresa-card {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
            color: white;
            text-decoration: none;
            display: block;
            height: 100%;
        }

            .empresa-card:hover {
                background: rgba(255, 255, 255, 0.2);
                transform: translateY(-5px);
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
                color: white;
                text-decoration: none;
            }

        .empresa-logo {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            object-fit: cover;
            margin: 0 auto 1rem;
            display: block;
            border: 2px solid rgba(255, 255, 255, 0.2);
        }

        .empresa-nombre {
            font-weight: 500;
            font-size: 0.95rem;
            margin: 0;
            line-height: 1.3;
        }

        .empresa-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            opacity: 0.8;
        }

        /* Animación del modal */
        .modal.fade .modal-dialog {
            transform: scale(0.8) translateY(-50px);
            transition: all 0.3s ease;
        }

        .modal.show .modal-dialog {
            transform: scale(1) translateY(0);
        }
    </style>
</head>
<body>
    <div class="login-container">
        <main class="login-card">
            <div class="brand-section">
                <div class="brand-logo">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <h1 class="brand-title">NSGroup</h1>
                <p class="brand-subtitle">Acceso seguro al sistema</p>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert-custom">
                    <div class="alert-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>Error de autenticación
                    </div>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <div class="error-message">@error.ErrorMessage</div>
                    }
                </div>
            }

            <form asp-action="Login" method="post" novalidate autocomplete="off" class="form-section">
                <div class="input-group-custom">
                    <input asp-for="Username"
                           class="form-control"
                           placeholder=" "
                           autocomplete="username"
                           required />
                    <i class="fas fa-user input-icon"></i>
                    <label asp-for="Username">Usuario</label>
                    <span asp-validation-for="Username" class="validation-error"></span>
                </div>

                <div class="input-group-custom password-field">
                    <input asp-for="Password"
                           class="form-control"
                           type="password"
                           placeholder=" "
                           autocomplete="current-password"
                           required
                           id="passwordField" />
                    <i class="fas fa-lock input-icon"></i>
                    <label asp-for="Password">Contraseña</label>
                    <button type="button" class="password-toggle" id="togglePassword">
                        <i class="fas fa-eye" id="toggleIcon"></i>
                    </button>
                    <span asp-validation-for="Password" class="validation-error"></span>
                </div>

                <button type="submit" class="btn-login" id="loginBtn">
                    <span class="btn-text">Acceder al Sistema</span>
                </button>
            </form>

            <div class="footer-section">
                <p class="footer-text">
                    <i class="fas fa-copyright me-1"></i>
                    @DateTime.Now.Year NSGroup. Todos los derechos reservados.
                </p>
            </div>
        </main>
    </div>

    <!-- Modal de Selección de Empresa -->
    <div class="modal fade modal-empresa" id="empresaModal" tabindex="-1" aria-labelledby="empresaModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="empresaModalLabel">
                        <i class="fas fa-building"></i>
                        Selecciona tu Empresa
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="text-center mb-4 opacity-75">Elige la empresa con la que deseas acceder al sistema</p>
                    <div class="row g-3" id="empresasContainer">
                        @if (Model?.Empresas != null)
                        {
                            @foreach (var empresa in Model.Empresas)
                            {
                                <div class="col-6 col-md-4 col-lg-3">
                                    <form asp-action="SeleccionarEmpresa" method="post" class="h-100">
                                        <input type="hidden" name="usuarioId" value="@Model.UsuarioID" />
                                        <input type="hidden" name="empresaId" value="@empresa.EmpresaID" />
                                        <a href="#" class="empresa-card" onclick="this.closest('form').submit(); return false;">
                                            @if (!string.IsNullOrEmpty(empresa.Logo))
                                            {
                                                <img src="~/Imagenes/@empresa.Logo" alt="@empresa.Nombre" class="empresa-logo" />
                                            }
                                            else
                                            {
                                                <div class="empresa-icon">
                                                    <i class="fas fa-building"></i>
                                                </div>
                                            }
                                            <p class="empresa-nombre">@empresa.Nombre</p>
                                        </a>
                                    </form>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            const loginBtn = document.getElementById('loginBtn');
            const inputs = document.querySelectorAll('.form-control');
            const passwordField = document.getElementById('passwordField');
            const togglePassword = document.getElementById('togglePassword');
            const toggleIcon = document.getElementById('toggleIcon');
            const empresaModal = new bootstrap.Modal(document.getElementById('empresaModal'));

            // Toggle password visibility
            togglePassword.addEventListener('click', function () {
                const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordField.setAttribute('type', type);

                if (type === 'text') {
                    toggleIcon.classList.remove('fa-eye');
                    toggleIcon.classList.add('fa-eye-slash');
                } else {
                    toggleIcon.classList.remove('fa-eye-slash');
                    toggleIcon.classList.add('fa-eye');
                }
            });

            // Form submission
            form.addEventListener('submit', function (e) {
                // Si hay empresas disponibles, mostrar modal en lugar de enviar directamente
                const empresasContainer = document.getElementById('empresasContainer');
                if (empresasContainer && empresasContainer.children.length > 0) {
                    e.preventDefault();

                    // Simular validación exitosa del login
                    loginBtn.classList.add('loading');
                    loginBtn.querySelector('.btn-text').textContent = 'Validando...';

                    // Simular tiempo de validación
                    setTimeout(() => {
                        loginBtn.classList.remove('loading');
                        loginBtn.querySelector('.btn-text').textContent = 'Acceder al Sistema';
                        empresaModal.show();
                    }, 1000);
                } else {
                    // Si no hay empresas, proceder normalmente
                    loginBtn.classList.add('loading');
                    loginBtn.querySelector('.btn-text').textContent = 'Iniciando sesión...';
                }
            });

            // Input focus/blur effects
            inputs.forEach(input => {
                input.addEventListener('focus', function () {
                    this.parentElement.classList.add('focused');
                });

                input.addEventListener('blur', function () {
                    this.parentElement.classList.remove('focused');
                });
            });

            // Auto-focus first empty input
            const firstEmptyInput = Array.from(inputs).find(input => !input.value);
            if (firstEmptyInput) {
                firstEmptyInput.focus();
            }

            // Función para mostrar el modal programáticamente
            window.mostrarModalEmpresas = function() {
                empresaModal.show();
            };
        });
    </script>
</body>
</html>