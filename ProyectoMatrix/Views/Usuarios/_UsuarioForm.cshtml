@using System.Linq
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@using ProyectoMatrix.Models.ModelUsuarios
@model UsuarioFormViewModel

@{
    var accion = Model.EsModoCrear ? "Crear" : "Editar";
    var iniciales = "NU";
    if (!Model.EsModoCrear && !string.IsNullOrWhiteSpace(Model.Nombre))
    {
        iniciales = $"{Model.Nombre[0]}".ToUpper();
        if (!string.IsNullOrWhiteSpace(Model.ApellidoPaterno))
        {
            iniciales += $"{Model.ApellidoPaterno[0]}".ToUpper();
        }
    }
    var nombreCompleto = Model.EsModoCrear ? "Nuevo Usuario" : $"{Model.Nombre} {Model.ApellidoPaterno}";
    var overrideGrupos = (ViewBag.OverrideGrupos as List<OverridesVm>) ?? new List<OverridesVm>();

    // ⚙️ EmpresaID para overrides: primero sesión, si no existe toma el primero seleccionado
    int? empresaId = ViewContext.HttpContext.Session.GetInt32("EmpresaID");
    if (empresaId == null && Model.EmpresasIDs != null && Model.EmpresasIDs.Any())
    {
        empresaId = Model.EmpresasIDs.First();
    }
}

<!-- ENCABEZADO -->
<div class="panel-header-modern">
    <div class="user-profile-section">
        <div class="user-avatar-circle">@iniciales</div>
        <div class="user-info">
            <h2 class="user-name">@nombreCompleto</h2>
            @if (!Model.EsModoCrear)
            {
                <div class="user-meta">
                    <span class="badge @(Model.Activo ? "bg-success" : "bg-secondary")">
                        @(Model.Activo ? "Activo" : "Inactivo")
                    </span>
                    <a href="#" class="reset-password-link">
                        <i class="fas fa-key"></i> Restablecer contraseña
                    </a>
                </div>
            }
        </div>
    </div>
    <button type="button" class="btn-close-modern" id="close-panel-btn" aria-label="Cerrar">
        <i class="fas fa-times"></i>
    </button>
</div>

<!-- Tokens / IDs ocultos para AJAX -->
<input type="hidden" id="__RequestVerificationToken" value="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />
<input type="hidden" id="UsuarioID" value="@Model.UsuarioID" />
<input type="hidden" id="EmpresaID" value="@(empresaId?.ToString() ?? "")" />

<!-- TABS -->
<ul class="nav nav-tabs nav-tabs-modern" id="userTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="cuenta-tab" data-bs-toggle="tab" data-bs-target="#tab-cuenta" type="button" role="tab">
            <i class="fas fa-user me-2"></i>Cuenta
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="permisos-tab" data-bs-toggle="tab" data-bs-target="#tab-permisos" type="button" role="tab">
            <i class="fas fa-shield-alt me-2"></i>Permisos
        </button>
    </li>
    @if (!Model.EsModoCrear && Model.HistorialDeCambios != null && Model.HistorialDeCambios.Any())
    {
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="auditoria-tab" data-bs-toggle="tab" data-bs-target="#tab-auditoria" type="button" role="tab">
                <i class="fas fa-history me-2"></i>Auditoría
            </button>
        </li>
    }
</ul>

<!-- CONTENIDO -->
<div class="tab-content tab-content-modern" id="userTabContent">
    <!-- CUENTA -->
    <div class="tab-pane fade show active" id="tab-cuenta" role="tabpanel">
        <div class="pane-scroll">
            <form id="user-form" asp-action="@accion" asp-controller="Usuarios" asp-route-id="@Model.UsuarioID" method="post" class="form-modern">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                @if (!Model.EsModoCrear)
                {
                    <input type="hidden" asp-for="UsuarioID" />
                }

                <div class="form-section">
                    <div class="section-header">
                        <i class="fas fa-user-circle section-icon"></i>
                        <h5 class="section-title">Datos Personales</h5>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label asp-for="Nombre" class="form-label-modern"></label>
                            <input asp-for="Nombre" class="form-control form-control-modern" placeholder="Ingrese el nombre" />
                            <span asp-validation-for="Nombre" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ApellidoPaterno" class="form-label-modern"></label>
                            <input asp-for="ApellidoPaterno" class="form-control form-control-modern" placeholder="Ingrese el apellido paterno" />
                            <span asp-validation-for="ApellidoPaterno" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ApellidoMaterno" class="form-label-modern"></label>
                            <input asp-for="ApellidoMaterno" class="form-control form-control-modern" placeholder="Ingrese el apellido materno" />
                        </div>
                        <div class="col-md-6">
                            <label asp-for="Telefono" class="form-label-modern"></label>
                            <input asp-for="Telefono" class="form-control form-control-modern" placeholder="+52 000 000 0000" />
                        </div>
                        <div class="col-12">
                            <label asp-for="Correo" class="form-label-modern"></label>
                            <input asp-for="Correo" type="email" class="form-control form-control-modern" placeholder="correo@ejemplo.com" />
                            <span asp-validation-for="Correo" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                @if (Model.EsModoCrear)
                {
                    <div class="form-section">
                        <div class="section-header">
                            <i class="fas fa-lock section-icon"></i>
                            <h5 class="section-title">Credenciales de Acceso</h5>
                        </div>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label asp-for="Username" class="form-label-modern"></label>
                                <input asp-for="Username" class="form-control form-control-modern" placeholder="usuario123" />
                                <span asp-validation-for="Username" class="text-danger small"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Password" class="form-label-modern"></label>
                                <input asp-for="Password" type="password" class="form-control form-control-modern" placeholder="••••••••" />
                                <span asp-validation-for="Password" class="text-danger small"></span>
                            </div>
                        </div>
                    </div>
                }

                <div class="form-section">
                    <div class="section-header">
                        <i class="fas fa-cogs section-icon"></i>
                        <h5 class="section-title">Configuración de Cuenta</h5>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label asp-for="RolID" class="form-label-modern"></label>
                            <input asp-for="RolID" type="number" class="form-control form-control-modern" min="1" />
                            <span asp-validation-for="RolID" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="EmpresasIDs" class="form-label-modern"></label>
                            <select asp-for="EmpresasIDs" asp-items="@ViewBag.Empresas" class="form-select form-control-modern" multiple size="4"></select>
                            <span asp-validation-for="EmpresasIDs" class="text-danger small"></span>
                            <small class="text-muted d-block mt-1">Mantén Ctrl para seleccionar varias</small>
                        </div>

                        @if (!Model.EsModoCrear)
                        {
                            <div class="col-12">
                                <div class="form-check form-switch form-switch-modern">
                                    <input class="form-check-input" type="checkbox" role="switch" asp-for="Activo" id="switchActivo" />
                                    <label class="form-check-label" for="switchActivo">
                                        <strong>Usuario Activo</strong>
                                        <small class="d-block text-muted">Desactiva para suspender el acceso</small>
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn btn-outline-secondary btn-modern" id="cancel-btn">
                        <i class="fas fa-times me-2"></i>Cancelar
                    </button>
                    <button type="submit" class="btn btn-primary btn-modern">
                        <i class="fas fa-save me-2"></i>@(Model.EsModoCrear ? "Crear Usuario" : "Guardar Cambios")
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- PERMISOS -->
    <div class="tab-pane fade" id="tab-permisos" role="tabpanel" aria-labelledby="permisos-tab">
        <div class="pane-scroll">
            <div class="permissions-container">
                <div class="permissions-header">
                    <div>
                        <h5 class="mb-1">Permisos Personalizados</h5>
                        <p class="text-muted small mb-0">Configura permisos específicos para este usuario. Por defecto hereda los del rol.</p>
                    </div>

                    @if ((ViewBag.OverrideGrupos is List<OverridesVm> _gr) && _gr.Count > 0 && !Model.EsModoCrear)
                    {
                        <div class="d-flex align-items-center gap-2">
                            <span id="ov-dirty-indicator" class="badge bg-warning text-dark d-none">Cambios sin guardar</span>
                          
                        </div>
                    }
                </div>

                @if (!(ViewBag.OverrideGrupos is List<OverridesVm> grupos) || grupos.Count == 0)
                {
                    <div class="alert alert-warning"><i class="fas fa-exclamation-triangle me-2"></i>No hay información de permisos disponible.</div>
                }
                else
                {
                    <form id="ov-form" asp-action="GuardarOverrides" asp-controller="Usuarios" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="UsuarioID" value="@Model.UsuarioID" />
                        @{
                            var idx = 0;
                        }

                        @foreach (var grupo in grupos)
                        {
                            <div class="permission-group mb-3">
                                <div class="permission-group-header sticky-top">
                                    <i class="fas fa-folder-open me-2"></i>
                                    <strong>@grupo.MenuNombre</strong>
                                    <span class="badge bg-light text-dark ms-2">@grupo.Items.Count permisos</span>
                                </div>

                                <div class="table-responsive ov-table-scroll">
                                    <table class="table table-permissions align-middle mb-0">
                                        <thead class="sticky-top">
                                            <tr>
                                                <th style="width:60px;">ID</th>
                                                <th>Permiso</th>
                                                <th class="text-center" style="width:200px;">Acceso</th>
                                                <th class="text-center" style="width:100px;">Estado</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var it in grupo.Items)
                                            {
                                                <tr data-submenu="@it.SubMenuID" data-estado-inicial="@(it.Estado >= -1 ? it.Estado : -1)">
                                                    <td class="text-muted">@it.SubMenuID</td>
                                                    <td>
                                                        <strong>@it.Nombre</strong>
                                                        <div class="ov-badge mt-1 @(it.Estado == -1 ? "d-none" : "")">
                                                            <span class="badge @(it.Estado == 1 ? "bg-success" : "bg-warning text-dark")">
                                                                @(it.Estado == 1 ? "Override: Permitido" : "Override: Denegado")
                                                            </span>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">
                                                        <!-- Radio buttons para selección -->
                                                        <div class="btn-group-vertical btn-group-sm" role="group">
                                                            <div class="form-check">
                                                                <input class="form-check-input ov-radio" type="radio"
                                                                       name="Items[@idx].Estado" value="1"
                                                                       id="perm_@it.SubMenuID"
                                                                       @(it.Estado == 1 ? "checked" : "")>
                                                                <label class="form-check-label text-success" for="perm_@it.SubMenuID">
                                                                    <i class="fas fa-check me-1"></i> Permitir
                                                                </label>
                                                            </div>
                                                            <div class="form-check">
                                                                <input class="form-check-input ov-radio" type="radio"
                                                                       name="Items[@idx].Estado" value="0"
                                                                       id="deny_@it.SubMenuID"
                                                                       @(it.Estado == 0 ? "checked" : "")>
                                                                <label class="form-check-label text-danger" for="deny_@it.SubMenuID">
                                                                    <i class="fas fa-times me-1"></i> Denegar
                                                                </label>
                                                            </div>
                                                            <div class="form-check">
                                                                <input class="form-check-input ov-radio" type="radio"
                                                                       name="Items[@idx].Estado" value="-1"
                                                                       id="inherit_@it.SubMenuID"
                                                                       @(it.Estado == -1 ? "checked" : "")>
                                                                <label class="form-check-label text-muted" for="inherit_@it.SubMenuID">
                                                                    <i class="fas fa-undo me-1"></i> Heredar
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="text-center ov-estado">
                                                        @if (it.PermisoEfectivo)
                                                        {
                                                            <span class="text-success" title="Efectivo: Sí"><i class="fas fa-check-circle fa-lg"></i></span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-muted" title="Efectivo: No"><i class="fas fa-times-circle fa-lg"></i></span>
                                                        }
                                                    </td>
                                                    <td class="d-none">
                                                        <input type="hidden" name="Items[@idx].SubMenuID" value="@it.SubMenuID" />
                                                    </td>
                                                </tr>
                                                idx++;
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }

                        <div class="ov-sticky-footer">
                            <div class="d-flex align-items-center gap-2">
                                <span id="ov-dirty-indicator-bottom" class="badge bg-warning text-dark d-none">Cambios sin guardar</span>
                                <button type="submit" class="btn btn-primary btn-modern" id="ov-save">
                                    <i class="fas fa-save me-2"></i>Guardar overrides
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-modern" id="ov-reset-all">
                                    <i class="fas fa-undo me-2"></i>Revertir cambios
                                </button>
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>

    <!-- AUDITORÍA -->
    @if (!Model.EsModoCrear && Model.HistorialDeCambios != null && Model.HistorialDeCambios.Any())
    {
        <div class="tab-pane fade" id="tab-auditoria" role="tabpanel">
            <div class="pane-scroll">
                <div class="audit-container">
                    <div class="audit-header">
                        <h5 class="mb-1">Historial de Cambios</h5>
                        <p class="text-muted small mb-0">Registro completo de modificaciones</p>
                    </div>
                    <div class="timeline">
                        @foreach (var item in Model.HistorialDeCambios.OrderByDescending(x => x.FechaModificacion))
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker"></div>
                                <div class="timeline-content">
                                    <div class="timeline-date"><i class="fas fa-clock me-1"></i>@item.FechaModificacion.ToString("dd/MM/yyyy HH:mm")</div>
                                    <div class="timeline-description">@item.DescripcionDelCambio</div>
                                    <div class="timeline-user"><i class="fas fa-user me-1"></i>@item.ModificadoPor</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- ESTILOS -->
<style>
    :root {
        --pm-indigo: #667eea;
        --pm-purple: #764ba2;
        --pm-muted: #f6f7fb;
        --pm-surface: #ffffff;
        --pm-border: #e7e9ef;
        --pm-text: #283046;
        --pm-text-muted: #6b7280;
    }

    .panel-header-modern {
        background: linear-gradient(135deg,#667eea 0%,#764ba2 100%);
        padding: 1.5rem 2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        color: #fff;
        border-radius: 12px 12px 0 0
    }

    .user-profile-section {
        display: flex;
        align-items: center;
        gap: 1.25rem
    }

    .user-avatar-circle {
        width: 64px;
        height: 64px;
        border-radius: 50%;
        background: rgba(255,255,255,.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        border: 2px solid rgba(255,255,255,.35);
        box-shadow: 0 4px 12px rgba(0,0,0,.15)
    }

    .user-name {
        margin: 0;
        font-size: 1.35rem;
        font-weight: 700
    }

    .user-meta {
        display: flex;
        gap: .75rem;
        margin-top: .25rem
    }

    .reset-password-link {
        color: #fff;
        opacity: .92;
        text-decoration: none
    }

        .reset-password-link:hover {
            opacity: 1;
            text-decoration: underline
        }

    .btn-close-modern {
        background: rgba(255,255,255,.22);
        border: 0;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        color: #fff
    }

        .btn-close-modern:hover {
            background: rgba(255,255,255,.32);
            transform: rotate(90deg)
        }

    .nav-tabs-modern {
        background: var(--pm-muted);
        border-bottom: 1px solid var(--pm-border);
        padding: 0 1rem
    }

        .nav-tabs-modern .nav-link {
            border: 0;
            color: var(--pm-text-muted);
            font-weight: 600;
            padding: 1rem 1.2rem;
            border-radius: .5rem .5rem 0 0
        }

            .nav-tabs-modern .nav-link.active {
                color: #667eea;
                background: var(--pm-surface)
            }

                .nav-tabs-modern .nav-link.active::after {
                    content: "";
                    position: absolute;
                    left: 0;
                    right: 0;
                    bottom: -1px;
                    height: 2px;
                    background: linear-gradient(90deg,#667eea,#764ba2)
                }

    .tab-content-modern {
        background: var(--pm-surface);
        padding: 0;
        border-radius: 0 0 12px 12px;
        height: calc(100vh - 180px);
        overflow: hidden
    }

    .tab-pane {
        height: 100%
    }

    .pane-scroll {
        height: 100%;
        overflow: auto;
        padding: 1.5rem
    }

    .form-modern {
        max-width: 1000px;
        margin: 0 auto
    }

    .form-section {
        margin-bottom: 1.5rem;
        padding: 1.1rem;
        background: var(--pm-muted);
        border-radius: 12px;
        border: 1px solid var(--pm-border)
    }

    .section-header {
        display: flex;
        align-items: center;
        gap: .6rem;
        margin-bottom: 1rem
    }

    .section-icon {
        color: #667eea
    }

    .section-title {
        margin: 0;
        font-weight: 700;
        color: var(--pm-text)
    }

    .form-label-modern {
        font-weight: 600;
        color: var(--pm-text);
        margin-bottom: .4rem
    }

    .form-control-modern, .form-select {
        border: 2px solid var(--pm-border);
        border-radius: 10px;
        padding: .62rem .9rem
    }

        .form-control-modern:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 .2rem rgba(102,126,234,.15)
        }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: .75rem;
        padding-top: 1rem;
        border-top: 1px solid var(--pm-border)
    }

    .permissions-container {
        max-width: 1280px;
        margin: 0 auto
    }

    .permissions-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: .75rem;
        border-bottom: 1px solid var(--pm-border)
    }

    .permission-group {
        margin-bottom: 1rem;
        border: 1px solid var(--pm-border);
        border-radius: 14px;
        overflow: hidden;
        background: #fff
    }

    .permission-group-header {
        background: linear-gradient(135deg,#667eea,#764ba2);
        color: #fff;
        padding: .85rem 1.1rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: .5rem;
        z-index: 3
    }

    .ov-table-scroll {
        max-height: 56vh;
        overflow: auto;
        border-top: 1px solid var(--pm-border)
    }

    .table-permissions {
        margin: 0;
        border-collapse: separate;
        border-spacing: 0
    }

        .table-permissions thead {
            background: var(--pm-muted);
            position: sticky;
            top: 0;
            z-index: 2
        }

        .table-permissions th, .table-permissions td {
            padding: .85rem .9rem;
            vertical-align: middle
        }

        .table-permissions th {
            font-weight: 700;
            color: var(--pm-text);
            border-bottom: 1px solid var(--pm-border)
        }

        .table-permissions tbody tr {
            border-bottom: 1px solid var(--pm-border)
        }

            .table-permissions tbody tr:hover {
                background: #fafbff
            }

        .table-permissions th:first-child, .table-permissions td:first-child {
            position: sticky;
            left: 0;
            background: #fff;
            z-index: 3;
            box-shadow: 1px 0 0 var(--pm-border)
        }

        .table-permissions .btn-group {
            flex-wrap: wrap;
            gap: .4rem;
            justify-content: center
        }

            .table-permissions .btn-group .btn {
                min-width: 108px
            }

    @@media (max-width:640px) {
        .table-permissions .btn-group .btn {
            min-width: auto;
            padding: .45rem .6rem
        }

        .table-permissions .btn i {
            margin-right: 0
        }

        .table-permissions .btn {
            font-size: 0
        }

            .table-permissions .btn i {
                font-size: 14px
            }

        .table-permissions th:first-child, .table-permissions td:first-child {
            display: none
        }
    }

    .ov-sticky-footer {
        position: sticky;
        bottom: 0;
        z-index: 4;
        background: linear-gradient(0deg,rgba(255,255,255,1) 70%,rgba(255,255,255,0) 100%);
        padding: .8rem 0 0;
        margin-top: .5rem;
        border-top: 1px solid var(--pm-border)
    }

    /* Estilos para los radio buttons de permisos */
    .form-check-input.ov-radio {
        margin-right: 0.5rem;
    }

    .form-check-label {
        cursor: pointer;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        transition: all 0.2s;
    }

    .form-check-input:checked + .form-check-label {
        font-weight: bold;
    }

    .form-check-input[value="1"]:checked + .form-check-label {
        background-color: rgba(40, 167, 69, 0.1);
        border: 1px solid #28a745;
    }

    .form-check-input[value="0"]:checked + .form-check-label {
        background-color: rgba(220, 53, 69, 0.1);
        border: 1px solid #dc3545;
    }

    .form-check-input[value="-1"]:checked + .form-check-label {
        background-color: rgba(108, 117, 125, 0.1);
        border: 1px solid #6c757d;
    }

    .btn-group-vertical .form-check {
        margin-bottom: 0.25rem;
    }
</style>

<!-- JS -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        console.log('🚀 Iniciando gestor de permisos (Radio Buttons)...');

        // ===== Referencias =====
        const ovForm = document.getElementById('ov-form');
        const ovSave = document.getElementById('ov-save');
        const ovSaveTop = document.getElementById('ov-save-top');
        const dirtyTop = document.getElementById('ov-dirty-indicator');
        const dirtyBot = document.getElementById('ov-dirty-indicator-bottom');
        const resetAllBtn = document.getElementById('ov-reset-all');

        if (!ovForm) {
            console.log('⚠️ Formulario de permisos no encontrado');
            return;
        }

        console.log('✅ Formulario encontrado, configurando...');

        let isDirty = false;

        // ===== FUNCIONES AUXILIARES =====
        function markDirty() {
            if (!isDirty) {
                isDirty = true;
                dirtyTop?.classList.remove('d-none');
                dirtyBot?.classList.remove('d-none');
                console.log('📝 Cambios marcados como pendientes');
            }
        }

        function clearDirty() {
            isDirty = false;
            dirtyTop?.classList.add('d-none');
            dirtyBot?.classList.add('d-none');
            console.log('✨ Cambios limpiados');
        }

        function updateBadge(tr, estado) {
            const badgeWrap = tr.querySelector('.ov-badge');
            const badge = badgeWrap?.querySelector('.badge');

            if (estado === -1) {
                badgeWrap?.classList.add('d-none');
            } else {
                if (badge) {
                    badge.className = 'badge ' + (estado === 1 ? 'bg-success' : 'bg-warning text-dark');
                    badge.textContent = estado === 1 ? 'Override: Permitido' : 'Override: Denegado';
                }
                badgeWrap?.classList.remove('d-none');
            }
        }

        // ===== CAMBIO EN RADIO BUTTONS =====
        document.getElementById('tab-permisos')?.addEventListener('change', (ev) => {
            if (!ev.target.classList.contains('ov-radio')) return;

            console.log('🖱️ Radio cambiado:', ev.target.value);

            const tr = ev.target.closest('tr');
            const subMenuId = tr.dataset.submenu;
            const estado = parseInt(ev.target.value);

            console.log(`  SubMenuID: ${subMenuId}, Nuevo estado: ${estado}`);

            updateBadge(tr, estado);
            markDirty();
        });

        // ===== GUARDAR SUPERIOR =====
        ovSaveTop?.addEventListener('click', (e) => {
            console.log('💾 Click en botón superior');
            e.preventDefault();
            guardarOverrides(ovSaveTop);
        });

        // ===== SUBMIT DEL FORMULARIO =====
        ovForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            console.log('📤 Submit del formulario interceptado');
            await guardarOverrides(ovSave);
        });

        // ===== FUNCIÓN PRINCIPAL DE GUARDADO =====
        async function guardarOverrides(btnClicked) {
            console.log('🔄 Iniciando guardado de overrides...');

            const btn = btnClicked || ovSave;
            const originalHtml = btn.innerHTML;

            // Deshabilitar ambos botones
            [ovSave, ovSaveTop].forEach(b => {
                if (b) b.disabled = true;
            });

            btn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Guardando...';

            try {
                // Serializar formulario
                const fd = new FormData(ovForm);

                // DEBUG: Mostrar qué se está enviando
                console.log('📦 Datos a enviar:');
                for (let [key, value] of fd.entries()) {
                    console.log(`  ${key}: ${value}`);
                }

                // Petición AJAX
                const url = '@Url.Action("GuardarOverrides", "Usuarios")';
                console.log('🌐 URL:', url);

                const res = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    },
                    body: fd,
                    credentials: 'same-origin'
                });

                console.log('📡 Respuesta HTTP:', res.status, res.statusText);

                let data;
                try {
                    data = await res.json();
                    console.log('✅ JSON parseado:', data);
                } catch (jsonError) {
                    console.error('❌ Error parseando JSON:', jsonError);
                    const text = await res.text();
                    console.error('📄 Respuesta como texto:', text.substring(0, 500));
                    throw new Error('Respuesta del servidor no es JSON válido');
                }

                if (!res.ok || !data?.ok) {
                    throw new Error(data?.message || `Error HTTP ${res.status}`);
                }

                // ÉXITO
                clearDirty();
                showToast('success', data.message || 'Permisos actualizados correctamente');

                // Actualizar estados iniciales
                document.querySelectorAll('#tab-permisos tr[data-submenu]').forEach(tr => {
                    const radioChecked = tr.querySelector('.ov-radio:checked');
                    if (radioChecked) {
                        tr.setAttribute('data-estado-inicial', radioChecked.value);
                    }
                });

                console.log('✅ Guardado exitoso');

            } catch (err) {
                console.error('❌ Error al guardar:', err);
                showToast('error', err.message || 'Error al guardar los cambios');
            } finally {
                // Rehabilitar botones
                [ovSave, ovSaveTop].forEach(b => {
                    if (b) {
                        b.disabled = false;
                        b.innerHTML = originalHtml;
                    }
                });
            }
        }

        // ===== DESHACER CAMBIOS =====
        resetAllBtn?.addEventListener('click', () => {
            if (!isDirty) {
                showToast('info', 'No hay cambios para deshacer');
                return;
            }

            if (!confirm('¿Descartar todos los cambios no guardados?')) return;

            console.log('↩️ Deshaciendo cambios...');

            document.querySelectorAll('#ov-form tr[data-submenu]').forEach(tr => {
                const estadoInicial = parseInt(tr.getAttribute('data-estado-inicial') ?? "-1");
                const radio = tr.querySelector(`.ov-radio[value="${estadoInicial}"]`);

                if (radio) {
                    radio.checked = true;
                    updateBadge(tr, estadoInicial);
                }
            });

            clearDirty();
        });

        // ===== TOAST HELPER =====
        function showToast(type, message) {
            // Remover toasts anteriores
            document.querySelectorAll('.alert.position-fixed').forEach(alert => {
                alert.remove();
            });

            const alertClass = type === 'success' ? 'alert-success' :
                              type === 'error' ? 'alert-danger' : 'alert-info';
            const icon = type === 'success' ? '✓' : type === 'error' ? '✗' : 'ℹ';

            const alert = document.createElement('div');
            alert.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 350px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);';
            alert.innerHTML = `
                <strong>${icon} ${type === 'success' ? 'Éxito' : type === 'error' ? 'Error' : 'Info'}:</strong> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;

            document.body.appendChild(alert);

            const timeout = type === 'success' ? 4000 : type === 'error' ? 7000 : 5000;
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.classList.remove


            </script>