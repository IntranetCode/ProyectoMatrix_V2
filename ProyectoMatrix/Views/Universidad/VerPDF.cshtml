@using ProyectoMatrix.Models
@model ContenidoEducativo
@{
    ViewData["Title"] = Model.Titulo;
    Layout = null; // Sin layout para mostrar solo el PDF
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f8fafc;
        }

        .pdf-header {
            background: var(--color-primario, #4f46e5);
            color: #fff;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .pdf-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin: 0;
        }

        .pdf-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .btn-action {
            background: rgba(255,255,255,0.2);
            color: #fff;
            border: 1px solid rgba(255,255,255,0.3);
            padding: 0.5rem 1rem;
            border-radius: 6px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .btn-action:hover {
                background: rgba(255,255,255,0.3);
                color: #fff;
                text-decoration: none;
            }

        .pdf-container {
            width: 100%;
            height: calc(100vh - 80px);
            border: none;
            background: #fff;
        }

        .pdf-info {
            background: #fff;
            padding: 1rem 2rem;
            border-bottom: 1px solid #e2e8f0;
            display: flex;
            justify-content: between;
            align-items: center;
            font-size: 0.9rem;
            color: #64748b;
        }

        .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            color: #64748b;
        }

        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid var(--color-primario, #4f46e5);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        @@media (max-width: 768px) {
            .pdf-header

        {
            padding: 1rem;
            flex-direction: column;
            gap: 1rem;
        }

        .pdf-title {
            font-size: 1rem;
            text-align: center;
        }

        .pdf-actions {
            justify-content: center;
        }

        .pdf-container {
            height: calc(100vh - 120px);
        }

        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
</head>
<body>
    <div class="pdf-header">
        <h1 class="pdf-title">@Model.Titulo</h1>
        <div class="pdf-actions">
            <a href="@Url.Action("DescargarArchivo", new { id = Model.ContenidoID })" class="btn-action" target="_blank">
                <i class="fas fa-download"></i>
                Descargar
            </a>
            <button onclick="window.print()" class="btn-action">
                <i class="fas fa-print"></i>
                Imprimir
            </button>
            <button onclick="window.close()" class="btn-action">
                <i class="fas fa-times"></i>
                Cerrar
            </button>
        </div>
    </div>

    <div class="pdf-info">
        <div>
            <i class="fas fa-user"></i>
            Creado por: <strong>@Model.CreadoPor</strong>
        </div>
        <div>
            <i class="fas fa-calendar"></i>
            Fecha: <strong>@Model.FechaCreacion.ToString("dd/MM/yyyy")</strong>
        </div>
        <div>
            <i class="fas fa-file"></i>
            Tamaño: <strong>@Model.TamanoArchivo.FormatearTamano()</strong>
        </div>
    </div>

    <div id="loadingSpinner" class="loading-spinner">
        <div class="spinner"></div>
        <p>Cargando documento...</p>
    </div>

    <iframe id="pdfFrame"
            src="@Model.ArchivoRuta"
            class="pdf-container"
            style="display: none;"
            onload="hideLoading()"
            onerror="showError()">
    </iframe>

    <div id="errorMessage" class="error-message" style="display: none;">
        <i class="fas fa-exclamation-triangle"></i>
        <h3>Error al cargar el documento</h3>
        <p>No se pudo cargar el archivo PDF. Intenta descargarlo directamente.</p>
        <a href="@Url.Action("DescargarArchivo", new { id = Model.ContenidoID })" class="btn-action">
            <i class="fas fa-download"></i>
            Descargar PDF
        </a>
    </div>

    <script>
        function hideLoading() {
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('pdfFrame').style.display = 'block';
        }

        function showError() {
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('pdfFrame').style.display = 'none';
            document.getElementById('errorMessage').style.display = 'block';
        }

        // Timeout para mostrar error si tarda mucho en cargar
        setTimeout(function() {
            if (document.getElementById('loadingSpinner').style.display !== 'none') {
                showError();
            }
        }, 10000); // 10 segundos

        // Registrar visualización
        fetch('/Universidad/RegistrarVisualizacion', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: JSON.stringify({ id: @Model.ContenidoID })
        }).catch(console.error);

        // Mejorar experiencia de impresión
        window.addEventListener('beforeprint', function() {
            document.querySelector('.pdf-header').style.display = 'none';
            document.querySelector('.pdf-info').style.display = 'none';
        });

        window.addEventListener('afterprint', function() {
            document.querySelector('.pdf-header').style.display = 'flex';
            document.querySelector('.pdf-info').style.display = 'flex';
        });
    </script>
</body>
</html>
