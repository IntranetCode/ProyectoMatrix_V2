@inject ProyectoMatrix.Servicios.IServicioAcceso Acceso

@{
    var nombreUsuario = Context.Session.GetString("Username") ?? "Usuario";
    var nombreEmpresa = Context.Session.GetString("EmpresaNombre") ?? "NS Group";
    var empresaId = Context.Session.GetString("EmpresaId") ?? "1";
    var rolId = Context.Session.GetInt32("RolID") ?? 5; // solo para mostrar texto de rol si quieres
    var usuarioId = Context.Session.GetInt32("UsuarioID") ?? 0;

    // === Permisos de gestión (BD): OR de Crear/Editar/Eliminar curso ===
    var tCrear = Acceso.TienePermisoAsync(usuarioId, "Crear curso", "Crear");
    var tEditar = Acceso.TienePermisoAsync(usuarioId, "Editar curso", "Editar");
    var tEliminar = Acceso.TienePermisoAsync(usuarioId, "Eliminar curso", "Eliminar");
    await Task.WhenAll(tCrear, tEditar, tEliminar);
    var puedeGestionarCursos = tCrear.Result || tEditar.Result || tEliminar.Result;

    // Como acordamos: si puede gestionar, también puede asignar y configurar
    var puedeAsignarCursos = puedeGestionarCursos;
    var puedeConfigurar = puedeGestionarCursos;
}



<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - Universidad NS Group</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- CSS Core -->
    <link rel="stylesheet" href="~/css/globals/variables.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/components/navbar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/cards.css" asp-append-version="true" />
    <link href="~/css/stylesUniversidadLU.css" rel="stylesheet" />
    <!-- Universidad NS Specific CSS -->
    @*<link rel="stylesheet" href="~/css/universidad/universidad-core.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/universidad/universidad-components.css" asp-append-version="true" />
*@ 
    <!-- Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

    <!-- Favicon Universidad NS -->
    <link rel="icon" type="image/png" href="~/Imagenes/logo-universidad-ns.png" />

    <!-- Meta tags adicionales -->
    <meta name="description" content="Universidad NS Group - Sistema de Capacitación y Certificación" />
    <meta name="author" content="NS Group" />
    <meta name="robots" content="noindex, nofollow" />
</head>

<body class="universidad-layout" data-empresa="@empresaId" data-rol="@rolId">
    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading-overlay">
        <div class="loading-content">
            <div class="loading-spinner"></div>
            <p>Cargando Universidad NS...</p>
        </div>
    </div>

    <!-- Top Navigation Bar -->
    <nav class="universidad-navbar">
        <div class="navbar-container">
            <!-- Brand Section -->
            <div class="navbar-brand-section">
                <a href="/Universidad" class="universidad-brand">
                    <div class="brand-logo">
                        <img src="~/Imagenes/logo-universidad-ns.png"
                             alt="Universidad NS"
                             class="universidad-logo">
                    </div>
                    <div class="brand-text">
                        <h1 class="brand-title">Universidad NS</h1>
                        <span class="brand-subtitle">@nombreEmpresa</span>
                    </div>
                </a>
            </div>

            <!-- Navigation Links -->
            <div class="navbar-navigation">
                <div class="nav-links">
                    <a href="/Universidad" class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")">
                        <i class="fas fa-home"></i>
                        <span>Dashboard</span>
                    </a>
                    <a href="/Universidad/MisCursos" class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "MisCursos" ? "active" : "")">
                        <i class="fas fa-graduation-cap"></i>
                        <span>Mis Cursos</span>
                    </a>
                    <a href="/Universidad/MisCertificados" class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "MisCertificados" ? "active" : "")">
                        <i class="fas fa-certificate"></i>
                        <span>Certificados</span>
                    </a>

                    @if (puedeGestionarCursos)
                    {
                        <a asp-controller="Universidad" asp-action="GestionCursos"
                           class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "GestionCursos" ? "active" : "")">
                            <i class="fas fa-book"></i><span>Gestionar</span>
                        </a>
                    }

                    @if (puedeAsignarCursos)
                    {
                        <a asp-controller="Asignaciones" asp-action="AsignacionMasiva"
                           class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Asignaciones" ? "active" : "")">
                            <i class="fas fa-users"></i><span>Asignar</span>
                        </a>
                    }

                    @*
                         @if (puedeVerReportes)
                    {
                        <a href="/Universidad/Reportes" class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Reportes" ? "active" : "")">
                            <i class="fas fa-chart-bar"></i>
                            <span>Reportes</span>
                        </a>
                    }
                    *@

                   
                </div>
            </div>

            <!-- User Section -->
            <div class="navbar-user-section">
                <!-- Quick Actions -->
                <div class="quick-actions">
                    @if (puedeGestionarCursos)
                    {
                        <a asp-controller="Universidad" asp-action="CrearCurso" class="quick-action-btn" title="Crear Curso">
                            <i class="fas fa-plus"></i>
                        </a>
                    }

                    <a asp-controller="Menu" asp-action="Index" class="quick-action-btn" title="Volver a Intranet">
                        <i class="fas fa-home"></i>
                    </a>
                </div>

                <!-- User Menu -->
                <div class="user-menu">
                    <button class="user-toggle" id="userMenuToggle">
                        <div class="user-avatar">
                            <img src="~/Imagenes/default-avatar.png"
                                 alt="@nombreUsuario"
                                 onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="avatar-fallback" style="display: none;">
                                @(nombreUsuario.Substring(0, 1).ToUpper())
                            </div>
                        </div>
                        <div class="user-info">
                            <span class="user-name">@nombreUsuario</span>
                            <span class="user-role">@ProyectoMatrix.Helpers.UniversidadPermisosHelper.PermisosUniversidad.GetNivelAcceso(rolId)</span>
                        </div>
                        <i class="fas fa-chevron-down"></i>
                    </button>

                    <div class="user-dropdown" id="userDropdown">
                        <div class="dropdown-header">
                            <div class="dropdown-user-info">
                                <strong>@nombreUsuario</strong>
                                @*<small class="text-muted">@nombreEmpresa</small>*@ 
                            </div>
                        </div>
                        @*Se quito este fragemnto de codigo porque las opciones no funcionaba*@
                        @*
                        <div class="dropdown-divider"></div>
                        <a href="/Universidad/MiPerfil" class="dropdown-item">
                            <i class="fas fa-user"></i>
                            Mi Perfil
                        </a>

                       
                             <a href="/Universidad/MisPreferencias" class="dropdown-item">
                            <i class="fas fa-cog"></i>
                            Preferencias
                        </a>
                        <a href="/Universidad/MiProgreso" class="dropdown-item">
                            <i class="fas fa-chart-line"></i>
                            Mi Progreso
                        </a>
                       
                       
                        <div class="dropdown-divider"></div>
                        <a href="/Universidad/Ayuda" class="dropdown-item">
                            <i class="fas fa-question-circle"></i>
                            Ayuda
                        </a>
                         *@
                        <div class="dropdown-divider"></div>
                        <a href="/Menu/Index" class="dropdown-item">

                            <i class="fas fa-arrow-left"></i>
                            Volver a Intranet
                        </a>
                        <a asp-controller="Login" asp-action="Logout" class="dropdown-item">
                            <i class="fas fa-sign-out-alt"></i>
                            Cerrar Sesión
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content Area -->
    <main class="universidad-main" id="mainContent">
        @RenderBody()
    </main>

    <!-- Notification Toast Container -->
    <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer">
        <!-- Los toasts se agregan dinámicamente aquí -->
    </div>

    

    <!-- Overlay para cerrar paneles -->
    <div class="panel-overlay" id="panelOverlay"></div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/universidad/universidad-layout.js" asp-append-version="true"></script>

    <!-- Scripts específicos de la página -->
    @await RenderSectionAsync("Scripts", required: false)

    <!-- Script de inicialización del layout -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar Universidad Layout
            if (window.UniversidadLayout) {
                window.UniversidadLayout.init({
                    usuarioId: @usuarioId,
                    rolId: @rolId,
                    empresaId: @empresaId
                });
            }

            // Ocultar loading overlay
            setTimeout(() => {
                const loadingOverlay = document.getElementById('loadingOverlay');
                if (loadingOverlay) {
                    loadingOverlay.classList.add('fade-out');
                    setTimeout(() => loadingOverlay.remove(), 300);
                }
            }, 1000);

            // Configurar tema según empresa
            document.documentElement.style.setProperty('--empresa-id', '@empresaId');
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
          const toggle = document.getElementById('userMenuToggle');
          const menu   = document.getElementById('userDropdown');
          const overlay = document.getElementById('panelOverlay');

          const closeAll = () => {
            menu.classList.remove('is-open');
            overlay?.classList.remove('is-active');
          };

          toggle?.addEventListener('click', (e) => {
            e.stopPropagation();
            const willOpen = !menu.classList.contains('is-open');
            closeAll();
            if (willOpen) {
              menu.classList.add('is-open');
              overlay?.classList.add('is-active'); // opcional si quieres oscurecer fondo
            }
          });

          // Cerrar al hacer clic fuera
          document.addEventListener('click', (e) => {
            if (!menu.contains(e.target) && e.target !== toggle) closeAll();
          });

          // Cerrar con Escape
          document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') closeAll();
          });
        });
    </script>


</body>
</html>

