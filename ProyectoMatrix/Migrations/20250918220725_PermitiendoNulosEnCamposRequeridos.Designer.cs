// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoMatrix.Models;

#nullable disable

namespace ProyectoMatrix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250918220725_PermitiendoNulosEnCamposRequeridos")]
    partial class PermitiendoNulosEnCamposRequeridos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoMatrix.Models.AuditoriaUsuario", b =>
                {
                    b.Property<int>("AuditoriaID")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionDelCambio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AuditoriasUsuarios");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Comunicado", b =>
                {
                    b.Property<int>("ComunicadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComunicadoID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsPublico")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComunicado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<int?>("UsuarioCreadorID")
                        .HasColumnType("int");

                    b.HasKey("ComunicadoID");

                    b.ToTable("Comunicados");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.ComunicadoEmpresa", b =>
                {
                    b.Property<int>("ComunicadoID")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.HasKey("ComunicadoID", "EmpresaID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("ComunicadosEmpresas", (string)null);
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaID"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaID");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.EmpresaModel", b =>
                {
                    b.Property<int>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaID"));

                    b.Property<string>("ColorPrimario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioModelUsuarioID")
                        .HasColumnType("int");

                    b.HasKey("EmpresaID");

                    b.HasIndex("UsuarioModelUsuarioID");

                    b.ToTable("EmpresaModel");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("EsArchivada")
                        .HasColumnType("bit");

                    b.Property<bool>("EsLeida")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOrigen")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TablaOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.NotificacionEmpresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("NotificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificacionId");

                    b.HasIndex("EmpresaId", "NotificacionId");

                    b.ToTable("NotificacionEmpresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.NotificacionLectura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaLeida")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificacionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificacionId", "UsuarioId")
                        .IsUnique();

                    b.ToTable("NotificacionLecturas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaID"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaID");

                    b.ToTable("Persona", (string)null);
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("NombreDelRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URol");

                    b.HasKey("RolID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.UsuarioModel", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorPrimario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.UsuariosEmpresas", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioTempId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("UsuarioTempId");

                    b.ToTable("UsuariosEmpresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.V_InformacionUsuarioCompleta", b =>
                {
                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("V_InformacionUsuarioCompleta", (string)null);
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Webinar", b =>
                {
                    b.Property<int>("WebinarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebinarID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsPublico")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlTeams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioCreadorID")
                        .HasColumnType("int");

                    b.HasKey("WebinarID");

                    b.ToTable("Webinars");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.WebinarEmpresa", b =>
                {
                    b.Property<int>("WebinarID")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.HasKey("WebinarID", "EmpresaID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("WebinarsEmpresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.ComunicadoEmpresa", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.Comunicado", "Comunicado")
                        .WithMany("ComunicadosEmpresas")
                        .HasForeignKey("ComunicadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoMatrix.Models.Empresa", "Empresa")
                        .WithMany("ComunicadoEmpresas")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comunicado");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.EmpresaModel", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.UsuarioModel", null)
                        .WithMany("Empresas")
                        .HasForeignKey("UsuarioModelUsuarioID");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.NotificacionEmpresas", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.Notificacion", "Notificacion")
                        .WithMany()
                        .HasForeignKey("NotificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.NotificacionLectura", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.Notificacion", "Notificacion")
                        .WithMany()
                        .HasForeignKey("NotificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.UsuariosEmpresas", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoMatrix.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioTempId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.WebinarEmpresa", b =>
                {
                    b.HasOne("ProyectoMatrix.Models.Empresa", "Empresa")
                        .WithMany("WebinarsEmpresas")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoMatrix.Models.Webinar", "Webinar")
                        .WithMany("WebinarsEmpresas")
                        .HasForeignKey("WebinarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Webinar");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Comunicado", b =>
                {
                    b.Navigation("ComunicadosEmpresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Empresa", b =>
                {
                    b.Navigation("ComunicadoEmpresas");

                    b.Navigation("WebinarsEmpresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.UsuarioModel", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("ProyectoMatrix.Models.Webinar", b =>
                {
                    b.Navigation("WebinarsEmpresas");
                });
#pragma warning restore 612, 618
        }
    }
}
